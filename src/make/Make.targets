
PACKAGE_LIB                   = $(LIBNAME).so
PACKAGE_LIB_WITH_PATH         = $(E4NUANALYSIS_LIB_PATH)/$(LIBNAME).so

PACKAGE_ALL_SOURCES          := $(wildcard *.cxx)
DICTGEN_HEADERS              := $(addsuffix .h, $(basename $(PACKAGE_ALL_SOURCES)))
DICTGEN_OBJECTS              := $(addsuffix .o, $(basename $(DICTGEN_HEADERS)))
PACKAGE_ALL_SOURCES          := $(PACKAGE_ALL_SOURCES) $(DICTIONARY).cc $(wildcard *.cpp)
PACKAGE_ALL_OBJECTS           = $(addsuffix .o, $(basename $(PACKAGE_ALL_SOURCES)))
PACKAGE_SOURCES              := $(wildcard *.cxx)
PACKAGE_OBJECTS               = $(addsuffix .o, $(basename $(PACKAGE_SOURCES)))
PACKAGE_ALL_OBJECTS           = $(addsuffix .o, $(basename $(PACKAGE_ALL_SOURCES)))

SUBDIR_HEADERS_H              = $(wildcard *.h)
SUBDIR_HEADERS_ICC            = $(wildcard *.icc)
SUBDIR_HEADERS                = $(SUBDIR_HEADERS_H) $(SUBDIR_HEADERS_ICC)

PACKAGE_PCM               := $(LIBNAME)_rdict.pcm
PACKAGE_PCM_WITH_PATH     := $(E4NUANALYSIS_LIB_PATH)/$(PACKAGE_PCM)
PACKAGE_ROOTMAP           := $(LIBNAME).rootmap
PACKAGE_ROOTMAP_WITH_PATH := $(E4NUANALYSIS_LIB_PATH)/$(PACKAGE_ROOTMAP)

LIB_DEPEND=
ifeq ($(strip $(DICTIONARY)),undefined)
     LIB_DEPEND = $(PACKAGE_OBJECTS)
elsLIB_DEPEND = $(PACKAGE_ALL_OBJECTS)
endif

rootcint: $(DICTIONARY).o

$(DICTIONARY).cc: LinkDef.h $(DICTGEN_OBJECTS)
		  rm -f $(DICTIONARY).*
		  @echo "[package: $(PACKAGE)] Generating ROOT dictionary ..."
		  ROOT_INCLUDE_PATH=$(E4NUANALYSIS_LIB_PATH):$(E4NUANALYSIS)/src:$(E4NUANALYSIS)/src/$(PACKAGE) 
		  rootcint -f $(DICTIONARY).cc -c $(ROOT_INCLUDES) $(E4NUANALYSIS_INCLUDES) -I../include -s $(PACKAGE_LIB) -rml $(PACKAGE_PCM) -rmf $(PACKAGE_ROOTMAP) $(ROOT_DICT_GEN_INCLUDES) $(DICTGEN_HEADERS) LinkDef.h

$(PACKAGE_LIB_WITH_PATH): $(LIB_DEPEND)
			  @echo "[package: $(PACKAGE)] Generating shared library ..dictionary=.$(DICTIONARY)"
			  g++ -shared $(PACKAGE_OBJECTS) -o $(PACKAGE_LIB_WITH_PATH)	

ifeq ($(strip $(DICTIONARY)),undefined)
     g++ -shared $(PACKAGE_OBJECTS) -o $(PACKAGE_LIB_WITH_PATH)
else
	g++ -shared $(PACKAGE_ALL_OBJECTS) -o $(PACKAGE_LIB_WITH_PATH)
	[ ! -f $(PACKAGE_PCM) ] || cp $(PACKAGE_PCM) $(E4NUANALYSIS_LIB_PATH)
	[ ! -f $(PACKAGE_ROOTMAP) ] || cp $(PACKAGE_ROOTMAP) $(E4NUANALYSIS_LIB_PATH)
endif

lib: $(PACKAGE_LIB_WITH_PATH)

install-lib:
	@echo "[package: $(PACKAGE)] Installing library..."
	[ ! -f $(PACKAGE_LIB_WITH_PATH) ] || cp $(PACKAGE_LIB_WITH_PATH) $(E4NUANALYSIS_LIB_INSTALLATION_PATH)